@app.get('/posts')
def get_posts():
    # envoi la requete vers la db
    # cursor : ma souris -> clique sur execute et contient la requete ''' truc '''
    # la db envoi la reponse DANS le prochaine cursor 
    cursor.execute(''' SELECT * FROM posts ''')
    # resultat stock√© dans le cursor : je recup avec fetch
    posts = cursor.fetchall()
    return { 'posts': posts }


@app.get('/posts/{id}')
def get_post(id:int, response: Response):
    cursor.execute(''' SELECT * FROM posts WHERE id = %s''', (id,))
    post = cursor.fetchone()
    if not post:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,
                             detail=f'post with id {id} not found ...')
    return {'post detail': post}



    
@app.post('/create', status_code=status.HTTP_201_CREATED)
def create_post(post:Post, db:Session = Depends(get_db)):
    cursor.execute(''' INSERT INTO posts (title,content, published) VALUES (%s,%s,%s) RETURNING *''',
                    (post.title, post.content,post.published))
    # returning pour recup ici:
    new_post = cursor.fetchone()
    conn.commit()
    return {'new_post':new_post}



@app.delete('/posts/{id}', status_code=status.HTTP_204_NO_CONTENT)
def delete_post(id:int):
    cursor.execute('''DELETE FROM posts WHERE id = %s RETURNING *''', (id,))
    post_to_delete = cursor.fetchone()
    conn.commit()
    if post_to_delete is None:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,
                            detail=f'post with id {id} not found...')
    return 
    

@app.put('/posts/{id}')
def update_post(id:int, updated_post: Post):
    cursor.execute(''' UPDATE posts SET title = %s, content = %s , published = %s WHERE id = %s  RETURNING *''',
                   (updated_post.title, updated_post.content, updated_post.published, id))
    new_post = cursor.fetchone()
    conn.commit()
    if new_post is None:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,
                            detail=f'post with id {id} not found...')
    return {'data': updated_post}